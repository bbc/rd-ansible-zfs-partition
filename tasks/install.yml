---
# module: rd-ansible-zfs-partition/tasks/install
# description: Install our required packages for rd-ansible-zfs-partition

- name: Install packages
  package:
    name: "{{ packages }}"
    state: present
    update_cache: "{{ (ansible_pkg_mgr in ['apt', 'zypper']) | ternary('yes', omit) }}"
    cache_valid_time: "{{ (ansible_pkg_mgr == 'apt') | ternary(cache_timeout, omit) }}"
  register: install_packages
  until: install_packages is success
  retries: 5
  delay: 2

- name: Enable ZFS on current system
  modprobe:
    name: zfs
    state: present

## Various checks for system disks, multiple checks for different layout types
- name: If system disk is undefined then check boot partition and assume this is a system disk
  shell: "fdisk -l | grep '^/dev/[a-z]*[0-9]' | grep '*' | awk '{print $1}' | sed 's/[0-9]//g'"
  register: system_disk_check
  when: not system_disks
  changed_when: false

- name: Set system disk based on above check
  set_fact:
    system_disks: "{{ system_disks + [ item | basename ] }}"
  with_items: "{{ system_disk_check.stdout_lines | default([]) }}"

- name: If system disk is undefined then check boot partition and assume this is a system disk
  shell: "fdisk -l | grep boot | awk '{print $1}' | sed 's/[0-9]//g'"
  register: system_disk_check
  when: not system_disks
  changed_when: false

- name: Set system disk based on above check
  set_fact:
    system_disks: "{{ system_disks }} + [ '{{ item | basename }}' ]"
  with_items: "{{ system_disk_check.stdout_lines | default([]) }}"

- name: System disk output
  debug:
    msg: "System disks: {{ system_disks | join(' ') }}"

- name: If system disks is empty then fail
  fail:
    msg: "No system disks found or defined. Failing"
  when: not system_disks | length > 0

- name: Set disk_check_failed to false by default
  set_fact:
    disk_check_failed: false

- name: "Set up var for disks"
  set_fact:
    disk_var: "{{ hostvars[inventory_hostname]['ansible_devices'].keys()|list }}"
    ignored_disks: []

- name: Set up ignored disks
  set_fact:
    ignored_disks: "{{ ignored_disks + [ item ] }}"
  with_items:
    - "{{ system_disks }}"
    - "{{ zfs_ignore_disks }}"
